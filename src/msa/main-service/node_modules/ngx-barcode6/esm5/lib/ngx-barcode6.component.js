/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-barcode6.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// tslint:disable:no-input-rename component-selector
import { Component, Input, ViewChild, Renderer2, ElementRef } from '@angular/core';
/** @type {?} */
var jsbarcode = require('jsbarcode');
var NgxBarcode6Component = /** @class */ (function () {
    function NgxBarcode6Component(renderer) {
        this.renderer = renderer;
        this.elementType = 'svg';
        this.cssClass = 'barcode'; // this should be done more elegantly
        // this should be done more elegantly
        this.format = 'CODE128';
        this.lineColor = '#000000';
        this.width = 2;
        this.height = 100;
        this.displayValue = false;
        this.fontOptions = '';
        this.font = 'monospace';
        this.textAlign = 'center';
        this.textPosition = 'bottom';
        this.textMargin = 2;
        this.fontSize = 20;
        this.background = '#ffffff';
        this.margin = 10;
        this.marginTop = 10;
        this.marginBottom = 10;
        this.marginLeft = 10;
        this.marginRight = 10;
        this.value = '';
        this.valid = (/**
         * @return {?}
         */
        function () { return true; });
    }
    Object.defineProperty(NgxBarcode6Component.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                format: this.format,
                lineColor: this.lineColor,
                width: this.width,
                height: this.height,
                displayValue: this.displayValue,
                fontOptions: this.fontOptions,
                font: this.font,
                textAlign: this.textAlign,
                textPosition: this.textPosition,
                textMargin: this.textMargin,
                fontSize: this.fontSize,
                background: this.background,
                margin: this.margin,
                marginTop: this.marginTop,
                marginBottom: this.marginBottom,
                marginLeft: this.marginLeft,
                marginRight: this.marginRight,
                valid: this.valid,
            };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgxBarcode6Component.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.createBarcode();
    };
    /**
     * @return {?}
     */
    NgxBarcode6Component.prototype.createBarcode = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (!this.value) {
            return;
        }
        /** @type {?} */
        var element;
        switch (this.elementType) {
            case 'img':
                element = this.renderer.createElement('img');
                break;
            case 'canvas':
                element = this.renderer.createElement('canvas');
                break;
            case 'svg':
            default:
                element = this.renderer.createElement('svg', 'svg');
        }
        jsbarcode(element, this.value, this.options);
        try {
            for (var _b = tslib_1.__values(this.bcElement.nativeElement.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                var node = _c.value;
                this.renderer.removeChild(this.bcElement.nativeElement, node);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.renderer.appendChild(this.bcElement.nativeElement, element);
    };
    NgxBarcode6Component.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-barcode6',
                    template: "<div #bcElement [class]=\"cssClass\"></div>"
                }] }
    ];
    /** @nocollapse */
    NgxBarcode6Component.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    NgxBarcode6Component.propDecorators = {
        elementType: [{ type: Input, args: ['bc-element-type',] }],
        cssClass: [{ type: Input, args: ['bc-class',] }],
        format: [{ type: Input, args: ['bc-format',] }],
        lineColor: [{ type: Input, args: ['bc-line-color',] }],
        width: [{ type: Input, args: ['bc-width',] }],
        height: [{ type: Input, args: ['bc-height',] }],
        displayValue: [{ type: Input, args: ['bc-display-value',] }],
        fontOptions: [{ type: Input, args: ['bc-font-options',] }],
        font: [{ type: Input, args: ['bc-font',] }],
        textAlign: [{ type: Input, args: ['bc-text-align',] }],
        textPosition: [{ type: Input, args: ['bc-text-position',] }],
        textMargin: [{ type: Input, args: ['bc-text-margin',] }],
        fontSize: [{ type: Input, args: ['bc-font-size',] }],
        background: [{ type: Input, args: ['bc-background',] }],
        margin: [{ type: Input, args: ['bc-margin',] }],
        marginTop: [{ type: Input, args: ['bc-margin-top',] }],
        marginBottom: [{ type: Input, args: ['bc-margin-bottom',] }],
        marginLeft: [{ type: Input, args: ['bc-margin-left',] }],
        marginRight: [{ type: Input, args: ['bc-margin-right',] }],
        value: [{ type: Input, args: ['bc-value',] }],
        bcElement: [{ type: ViewChild, args: ['bcElement', { static: true },] }],
        valid: [{ type: Input, args: ['bc-valid',] }]
    };
    return NgxBarcode6Component;
}());
export { NgxBarcode6Component };
if (false) {
    /** @type {?} */
    NgxBarcode6Component.prototype.elementType;
    /** @type {?} */
    NgxBarcode6Component.prototype.cssClass;
    /** @type {?} */
    NgxBarcode6Component.prototype.format;
    /** @type {?} */
    NgxBarcode6Component.prototype.lineColor;
    /** @type {?} */
    NgxBarcode6Component.prototype.width;
    /** @type {?} */
    NgxBarcode6Component.prototype.height;
    /** @type {?} */
    NgxBarcode6Component.prototype.displayValue;
    /** @type {?} */
    NgxBarcode6Component.prototype.fontOptions;
    /** @type {?} */
    NgxBarcode6Component.prototype.font;
    /** @type {?} */
    NgxBarcode6Component.prototype.textAlign;
    /** @type {?} */
    NgxBarcode6Component.prototype.textPosition;
    /** @type {?} */
    NgxBarcode6Component.prototype.textMargin;
    /** @type {?} */
    NgxBarcode6Component.prototype.fontSize;
    /** @type {?} */
    NgxBarcode6Component.prototype.background;
    /** @type {?} */
    NgxBarcode6Component.prototype.margin;
    /** @type {?} */
    NgxBarcode6Component.prototype.marginTop;
    /** @type {?} */
    NgxBarcode6Component.prototype.marginBottom;
    /** @type {?} */
    NgxBarcode6Component.prototype.marginLeft;
    /** @type {?} */
    NgxBarcode6Component.prototype.marginRight;
    /** @type {?} */
    NgxBarcode6Component.prototype.value;
    /** @type {?} */
    NgxBarcode6Component.prototype.bcElement;
    /** @type {?} */
    NgxBarcode6Component.prototype.valid;
    /**
     * @type {?}
     * @private
     */
    NgxBarcode6Component.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,